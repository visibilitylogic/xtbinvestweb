{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/codabae/Documents/Projects/TradeTroyProject/tradeweb/src/Component/EditCopyTrade.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Modal, Button, message, Spin, Space } from \"antd\";\nimport axios from \"axios\";\nimport { DatePicker } from 'antd';\nimport { Container, Card, Form, Row, Col, Table } from \"react-bootstrap\";\n\nconst EditAutoCopyTrade = ({\n  children,\n  id,\n  callback\n}) => {\n  _s();\n\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [profitLoss, setprofitLoss] = useState(null);\n  const [market, setmarket] = useState(\"\");\n  const [amount, setamount] = useState(0);\n  const [assets, setassets] = useState(\"\");\n  const [scheduledTime, setscheduledTime] = useState(\"\");\n  const [checkDate, setcheckDate] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [btnLoading, setBtnLoading] = useState(false);\n\n  const onChangeDate = (value, dateString) => {\n    console.log('Selected Time');\n    setcheckDate(false); // console.log('Formatted Selected Time: ', dateString);\n  };\n\n  const onOkDate = value => {\n    setscheduledTime(value._d);\n  };\n\n  const getsingleTrade = _id => {\n    setLoading(true);\n    axios.get(`https://trade-backend-daari.ondigitalocean.app/api/autocopytrade/single/${_id}`).then(response => {\n      setLoading(false);\n      setprofitLoss(response.data.profitLoss);\n      setmarket(response.data.market);\n      setamount(response.data.amount);\n      setassets(response.data.assets);\n      setscheduledTime(response.data.scheduledTime);\n    }, error => {\n      console.log(error);\n    });\n  };\n\n  const showModal = () => {\n    setIsModalVisible(true);\n    getsingleTrade(id);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  const EditTrade = _id => {\n    setBtnLoading(true);\n    let data = {\n      profitLoss: profitLoss,\n      market: market,\n      amount: amount,\n      assets: assets,\n      scheduledTime: scheduledTime\n    };\n    axios.put(`https://trade-backend-daari.ondigitalocean.app/api/autocopytrade/updatetrade/${_id}`, data).then(response => {\n      handleCancel();\n      message.success(\"successfully updated auto-trade\");\n      setBtnLoading(false);\n      callback();\n    }, error => {\n      console.log(error);\n      message.error(\"error updated auto-trade\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      type: \"primary\",\n      onClick: showModal,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Edit Details\",\n      visible: isModalVisible,\n      onOk: handleOk,\n      onCancel: handleCancel,\n      footer: null,\n      children: loading ? /*#__PURE__*/_jsxDEV(Space, {\n        size: \"middle\",\n        children: /*#__PURE__*/_jsxDEV(Spin, {\n          size: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new_pdiv\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          className: \"user-form\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"d-flex align-items-center\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              className: \"mr-3 mb-0\",\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 43\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              onChange: e => setamount(e.target.value),\n              value: amount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 43\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                onChange: e => setprofitLoss(e.target.checked),\n                type: \"radio\",\n                label: \"Profit\",\n                id: \"default-radio\",\n                name: \"profitloss\" //   onChange={e=>this.setState({ profit:e.target.checked})}\n                ,\n                checked: profitLoss,\n                defaultChecked: profitLoss\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 43\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                // onChange={e=>this.setState({ Loss:e.target.checked})}\n                type: \"radio\",\n                label: \"Loss\",\n                id: \"default-radio\",\n                name: \"profitloss\" // checked={this.state.Loss}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 43\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"d-flex align-items-center mt-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              htmlFor: \"markets\",\n              className: \"mr-3\",\n              children: \"Markets\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 43\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              id: \"markets\",\n              custom: true,\n              onChange: e => setmarket(e.target.value),\n              value: market,\n              defaultValue: market,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Choose...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"stocks\",\n                children: \"Stocks\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"forex\",\n                children: \"Forex\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"indices\",\n                children: \"Indices\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"commodities\",\n                children: \"Commodities\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"cryptocurrency\",\n                children: \"Cryptocurrency\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 43\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"d-flex align-items-center\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              className: \"mr-3 mb-0\",\n              children: \"Assets\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 43\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              onChange: e => setassets(e.target.value),\n              value: assets\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 43\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"d-flex align-items-center\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              className: \"mr-3 mb-0\",\n              children: \"Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 43\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                md: 6,\n                children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                  showTime: true,\n                  onChange: onChangeDate,\n                  onOk: onOkDate\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 47\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                md: 6,\n                children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                  type: \"radio\",\n                  label: \"Now\",\n                  id: \"default-radio\",\n                  name: \"time\",\n                  onChange: e => (setcheckDate(e.target.checked), setscheduledTime(e.target.checked ? new Date() : null))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 47\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 43\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-right\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              type: \"button\",\n              onClick: () => EditTrade(id),\n              children: btnLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fa fa-spin fa-spinner\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 60\n                }, this), \"Applying...\"]\n              }, void 0, true) : \"Apply\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(EditAutoCopyTrade, \"EYe8D3vn7gze+8ogk5gPtDqL6Vs=\");\n\n_c = EditAutoCopyTrade;\nexport default EditAutoCopyTrade;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditAutoCopyTrade\");","map":{"version":3,"sources":["/home/codabae/Documents/Projects/TradeTroyProject/tradeweb/src/Component/EditCopyTrade.js"],"names":["React","useState","Modal","Button","message","Spin","Space","axios","DatePicker","Container","Card","Form","Row","Col","Table","EditAutoCopyTrade","children","id","callback","isModalVisible","setIsModalVisible","profitLoss","setprofitLoss","market","setmarket","amount","setamount","assets","setassets","scheduledTime","setscheduledTime","checkDate","setcheckDate","loading","setLoading","btnLoading","setBtnLoading","onChangeDate","value","dateString","console","log","onOkDate","_d","getsingleTrade","_id","get","then","response","data","error","showModal","handleOk","handleCancel","EditTrade","put","success","e","target","checked","Date"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Modal, Button, message, Spin, Space } from \"antd\";\nimport axios from \"axios\";\nimport { DatePicker } from 'antd';\nimport { Container, Card, Form, Row, Col, Table } from \"react-bootstrap\";\n\nconst EditAutoCopyTrade = ({ children, id, callback }) => {\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [profitLoss, setprofitLoss] = useState(null);\n  const [market, setmarket] = useState(\"\");\n  const [amount, setamount] = useState(0);\n  const [assets, setassets] = useState(\"\");\n  const [scheduledTime, setscheduledTime] = useState(\"\");\n  const [checkDate, setcheckDate]=useState(false)\n  const [loading, setLoading] = useState(false);\n  const [btnLoading, setBtnLoading]=useState(false)\n\n \n  const onChangeDate=(value, dateString)=> {\n    console.log('Selected Time');\n    setcheckDate(false)\n    // console.log('Formatted Selected Time: ', dateString);\n  \n  }\n  const onOkDate=(value)=> {\n    setscheduledTime(value._d)\n  }\n\n  const getsingleTrade = (_id) => {\n    setLoading(true);\n    axios\n      .get(`https://trade-backend-daari.ondigitalocean.app/api/autocopytrade/single/${_id}`)\n      .then(\n        (response) => {\n          setLoading(false);\n          setprofitLoss(response.data.profitLoss);\n          setmarket(response.data.market);\n          setamount(response.data.amount);\n          setassets(response.data.assets);\n          setscheduledTime(response.data.scheduledTime);\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n  };\n\n  const showModal = () => {\n    setIsModalVisible(true);\n    getsingleTrade(id);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  const EditTrade = (_id) => {\n    setBtnLoading(true)\n    let data = {\n        profitLoss:profitLoss,\n        market:market,\n        amount:amount,\n        assets:assets,\n        scheduledTime:scheduledTime,\n    };\n\n    axios\n      .put(`https://trade-backend-daari.ondigitalocean.app/api/autocopytrade/updatetrade/${_id}`, data)\n      .then(\n        (response) => {\n          handleCancel();\n          message.success(\"successfully updated auto-trade\");\n          setBtnLoading(false)\n          callback();\n        },\n        (error) => {\n          console.log(error);\n          message.error(\"error updated auto-trade\");\n        }\n      );\n  };\n  return (\n    <>\n      <span type=\"primary\" onClick={showModal}>\n        {children}\n      </span>\n      <Modal\n        title=\"Edit Details\"\n        visible={isModalVisible}\n        onOk={handleOk}\n        onCancel={handleCancel}\n        footer={null}\n      >\n        {loading ? (\n          <Space size=\"middle\">\n            <Spin size=\"large\" />\n          </Space>\n        ) : (\n          <div className=\"new_pdiv\">\n            <Form className=\"user-form\">\n                                        <Form.Group className=\"d-flex align-items-center\">\n                                          <Form.Label className=\"mr-3 mb-0\">Amount</Form.Label>\n                                          <Form.Control type=\"number\" \n                                             onChange={e=>setamount(e.target.value)}\n                                             value={amount}\n                                          />\n                                        </Form.Group>\n                                        <Row>\n                                          <Col md={6}>\n                                            <Form.Check\n                                             onChange={e=>setprofitLoss(e.target.checked)}\n                                              type=\"radio\"\n                                              label=\"Profit\"\n                                              id=\"default-radio\"\n                                              name=\"profitloss\"\n                                             \n                                            //   onChange={e=>this.setState({ profit:e.target.checked})}\n                                             checked={profitLoss}\n                                             defaultChecked={profitLoss}\n                                          />\n                                            \n                                          </Col>\n                                          <Col md={6}>\n                                            <Form.Check\n                                            // onChange={e=>this.setState({ Loss:e.target.checked})}\n\n                                              type=\"radio\"\n                                              label=\"Loss\"\n                                              id=\"default-radio\"\n                                              name=\"profitloss\"\n                                              // checked={this.state.Loss}\n                                            />\n                                          </Col>\n                                        </Row>\n                                        <Form.Group className=\"d-flex align-items-center mt-3\">\n                                          <Form.Label htmlFor=\"markets\" className=\"mr-3\">\n                                            Markets\n                                          </Form.Label>\n                                          <Form.Control\n                                            as=\"select\"\n                                            id=\"markets\"\n                                            custom\n                                            onChange={e=>setmarket(e.target.value)}\n                                            value={market}\n                                            defaultValue={market}\n                                          >\n                                            <option>Choose...</option>\n                                            <option value=\"stocks\">Stocks</option>\n                                            <option value=\"forex\">Forex</option>\n                                            <option value=\"indices\">Indices</option>\n                                            <option value=\"commodities\">Commodities</option>\n                                            <option value=\"cryptocurrency\">Cryptocurrency</option>\n                                          </Form.Control>\n                                        </Form.Group>\n                                        <Form.Group className=\"d-flex align-items-center\">\n                                          <Form.Label className=\"mr-3 mb-0\">Assets</Form.Label>\n                                          <Form.Control type=\"text\" \n                                             onChange={e=>setassets(e.target.value)}\n                                             value={assets}/>\n                                        </Form.Group>\n                                        <Form.Group className=\"d-flex align-items-center\">\n                                          <Form.Label className=\"mr-3 mb-0\">Time</Form.Label>\n                                          <Row>\n                                            <Col md={6}>\n                                              {/* <Form.Check\n                                                type=\"radio\"\n                                                label=\"Schedule\"\n                                                id=\"default-radio\"\n                                                name=\"time\"\n                                              /> */}\n                                              <DatePicker showTime onChange={onChangeDate} onOk={onOkDate} />\n\n                                            </Col>\n                                            <Col md={6}>\n                                              <Form.Check\n                                                type=\"radio\"\n                                                label=\"Now\"\n                                                id=\"default-radio\"\n                                                name=\"time\"\n                                                onChange={(e)=>(setcheckDate(e.target.checked),setscheduledTime(e.target.checked?new Date():null))}\n                                            \n                                              />\n                                            </Col>\n                                          </Row>\n                                        </Form.Group>\n                                        <div className=\"text-right\">\n                                          <Button type=\"primary\" type=\"button\" onClick={()=>( EditTrade (id)\n                                          )}>{btnLoading?<><i className=\"fa fa-spin fa-spinner\"></i>Applying...</> : \"Apply\"}</Button>\n                                        </div>\n                                      </Form>\n          </div>\n        )}\n      </Modal>\n    </>\n  );\n};\n\nexport default EditAutoCopyTrade;\n"]},"metadata":{},"sourceType":"module"}