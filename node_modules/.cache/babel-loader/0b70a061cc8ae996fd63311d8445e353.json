{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/codabae/Documents/Projects/TradeTroyProject/tradeweb/src/Component/EditAutotradeModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Modal, Button, message, Spin, Space } from \"antd\";\nimport axios from \"axios\";\n\nconst EditAutoTrade = ({\n  children,\n  id,\n  callback\n}) => {\n  _s();\n\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [userName, setuserName] = useState(\"\");\n  const [profitPercentage, setprofitPercentage] = useState(\"\");\n  const [subscriptionFee, setsubscriptionFee] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const getsingleTrade = _id => {\n    setLoading(true);\n    axios.get(`https://bridgegatebackend.herokuapp.com/api/copytrade/${_id}`).then(response => {\n      setLoading(false);\n      console.log(response.data);\n      setuserName(response.data.userName);\n      setprofitPercentage(response.data.profitPercentage);\n      setsubscriptionFee(response.data.subscriptionFee);\n    }, error => {\n      console.log(error);\n    });\n  };\n\n  const showModal = () => {\n    setIsModalVisible(true);\n    getsingleTrade(id);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  const EditTrade = _id => {\n    let data = {\n      subscriptionFee: subscriptionFee,\n      profitPercentage: profitPercentage,\n      userName: userName\n    };\n    axios.put(`https://bridgegatebackend.herokuapp.com/api/copytrade/${_id}`, data).then(response => {\n      handleCancel();\n      message.success(\"successfully updated auto-trade\");\n      callback();\n    }, error => {\n      console.log(error);\n      message.error(\"error updated auto-trade\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      type: \"primary\",\n      onClick: showModal,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Edit Details\",\n      visible: isModalVisible,\n      onOk: handleOk,\n      onCancel: handleCancel,\n      footer: null,\n      children: loading ? /*#__PURE__*/_jsxDEV(Space, {\n        size: \"middle\",\n        children: /*#__PURE__*/_jsxDEV(Spin, {\n          size: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new_pdiv\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \" newpublic-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Username :\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"dash-input\",\n                type: \"text\",\n                name: \"text\",\n                value: userName,\n                onChange: e => setuserName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"profit : \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"dash-input\",\n                type: \"number\",\n                name: \"text\",\n                value: profitPercentage,\n                onChange: e => setprofitPercentage(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Subscription: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"dash-input\",\n                type: \"number\",\n                name: \"text\",\n                value: subscriptionFee,\n                onChange: e => setsubscriptionFee(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"save-btn w-100\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => EditTrade(id),\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(EditAutoTrade, \"8PDcd3MK3E0CJsEps/gY7zJKctI=\");\n\n_c = EditAutoTrade;\nexport default EditAutoTrade;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditAutoTrade\");","map":{"version":3,"sources":["/home/codabae/Documents/Projects/TradeTroyProject/tradeweb/src/Component/EditAutotradeModal.js"],"names":["React","useState","Modal","Button","message","Spin","Space","axios","EditAutoTrade","children","id","callback","isModalVisible","setIsModalVisible","userName","setuserName","profitPercentage","setprofitPercentage","subscriptionFee","setsubscriptionFee","loading","setLoading","getsingleTrade","_id","get","then","response","console","log","data","error","showModal","handleOk","handleCancel","EditTrade","put","success","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Modal, Button, message, Spin, Space } from \"antd\";\nimport axios from \"axios\";\n\nconst EditAutoTrade = ({ children, id, callback }) => {\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [userName, setuserName] = useState(\"\");\n  const [profitPercentage, setprofitPercentage] = useState(\"\");\n  const [subscriptionFee, setsubscriptionFee] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const getsingleTrade = (_id) => {\n    setLoading(true);\n    axios\n      .get(`https://bridgegatebackend.herokuapp.com/api/copytrade/${_id}`)\n      .then(\n        (response) => {\n          setLoading(false);\n          console.log(response.data);\n          setuserName(response.data.userName);\n          setprofitPercentage(response.data.profitPercentage);\n          setsubscriptionFee(response.data.subscriptionFee);\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n  };\n\n  const showModal = () => {\n    setIsModalVisible(true);\n    getsingleTrade(id);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  const EditTrade = (_id) => {\n    let data = {\n      subscriptionFee: subscriptionFee,\n      profitPercentage: profitPercentage,\n      userName: userName,\n    };\n\n    axios\n      .put(`https://bridgegatebackend.herokuapp.com/api/copytrade/${_id}`, data)\n      .then(\n        (response) => {\n          handleCancel();\n          message.success(\"successfully updated auto-trade\");\n          callback();\n        },\n        (error) => {\n          console.log(error);\n          message.error(\"error updated auto-trade\");\n        }\n      );\n  };\n  return (\n    <>\n      <span type=\"primary\" onClick={showModal}>\n        {children}\n      </span>\n      <Modal\n        title=\"Edit Details\"\n        visible={isModalVisible}\n        onOk={handleOk}\n        onCancel={handleCancel}\n        footer={null}\n      >\n        {loading ? (\n          <Space size=\"middle\">\n            <Spin size=\"large\" />\n          </Space>\n        ) : (\n          <div className=\"new_pdiv\">\n            <div className=\" newpublic-card\">\n              <div>\n                <div>\n                  <h4>Username :</h4>\n                  <input\n                    className=\"dash-input\"\n                    type=\"text\"\n                    name=\"text\"\n                    value={userName}\n                    onChange={(e) => setuserName(e.target.value)}\n                  />\n                </div>\n\n                <div>\n                  <h4>profit : </h4>\n                  <input\n                    className=\"dash-input\"\n                    type=\"number\"\n                    name=\"text\"\n                    value={profitPercentage}\n                    onChange={(e) => setprofitPercentage(e.target.value)}\n                  />\n                </div>\n\n                <div>\n                  <h4>Subscription: </h4>\n                  <input\n                    className=\"dash-input\"\n                    type=\"number\"\n                    name=\"text\"\n                    value={subscriptionFee}\n                    onChange={(e) => setsubscriptionFee(e.target.value)}\n                  />\n                </div>\n              </div>\n              <div className=\"save-btn w-100\">\n                <button onClick={() => EditTrade(id)}>Update</button>\n              </div>\n            </div>\n          </div>\n        )}\n      </Modal>\n    </>\n  );\n};\n\nexport default EditAutoTrade;\n"]},"metadata":{},"sourceType":"module"}