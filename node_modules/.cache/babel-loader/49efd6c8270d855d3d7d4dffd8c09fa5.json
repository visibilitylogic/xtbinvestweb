{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/codabae/Documents/Projects/tradeweb/src/Component/Orders.js\";\nimport React, { useState, useEffect, Component } from \"react\";\nimport \"../AccountsAsset/dash.css\";\nimport { Route, Switch, useHistory, Redirect, NavLink } from \"react-router-dom\";\nimport TradingViewWidget, { Themes } from \"react-tradingview-widget\";\n\nclass Orders extends Component {\n  constructor(props) {\n    super(props);\n    this.savedOrders = JSON.parse(localStorage.getItem(\"orders\")) ? JSON.parse(localStorage.getItem(\"orders\")) : [];\n\n    this.getBTC = str => {\n      let r = this.props.crypto.find(i => i.symbol.toLowerCase() === str.toLowerCase());\n\n      if (r) {\n        return r;\n      }\n    };\n\n    this.getETH = str => {\n      let r = this.props.crypto.find(i => i.symbol.toLowerCase() === str.toLowerCase());\n\n      if (r) {\n        return r;\n      }\n    };\n\n    this.getLTC = str => {\n      let r = this.props.crypto.find(i => i.symbol.toLowerCase() === str.toLowerCase());\n\n      if (r) {\n        return r;\n      }\n    };\n\n    this.getEUR = str => {\n      let r = this.props.fxPrice.find(i => i.symbol.toLowerCase() === str.toLowerCase());\n\n      if (r) {\n        return r;\n      }\n    };\n\n    this.getGBP = str => {\n      let r = this.props.fxPrice.find(i => i.symbol.toLowerCase() === str.toLowerCase());\n\n      if (r) {\n        return r;\n      }\n    };\n\n    this.getJPY = str => {\n      let r = this.props.fxPrice.find(i => i.symbol.toLowerCase() === str.toLowerCase());\n\n      if (r) {\n        return r;\n      }\n    };\n\n    this.getAAPL = str => {\n      let r = this.props.iex.find(i => i.symbol.toLowerCase() === str.toLowerCase());\n\n      if (r) {\n        return r;\n      }\n    };\n\n    this.getTSLA = str => {\n      let r = this.props.iex.find(i => i.symbol.toLowerCase() === str.toLowerCase());\n\n      if (r) {\n        return r;\n      }\n    };\n\n    this.getGOOGL = str => {\n      let r = this.props.iex.find(i => i.symbol.toLowerCase() === str.toLowerCase());\n\n      if (r) {\n        return r;\n      }\n    };\n\n    this.getMSFT = str => {\n      let r = this.props.iex.find(i => i.symbol.toLowerCase() === str.toLowerCase());\n\n      if (r) {\n        return r;\n      }\n    };\n\n    this.getFB = str => {\n      let r = this.props.iex.find(i => i.symbol.toLowerCase() === str.toLowerCase());\n\n      if (r) {\n        return r;\n      }\n    };\n\n    this.getDE = str => {\n      let r = this.props.cum.find(i => i.symbol.toLowerCase() === str.toLowerCase());\n\n      if (r) {\n        return r;\n      }\n    };\n\n    this.getHO = str => {\n      let r = this.props.cum.find(i => i.symbol.toLowerCase() === str.toLowerCase());\n\n      if (r) {\n        return r;\n      }\n    };\n\n    this.getCO = str => {\n      let r = this.props.cum.find(i => i.symbol.toLowerCase() === str.toLowerCase());\n\n      if (r) {\n        return r;\n      }\n    };\n\n    this.getGAS = str => {\n      let r = this.props.cum.find(i => i.symbol.toLowerCase() === str.toLowerCase());\n\n      if (r) {\n        return r;\n      }\n    };\n\n    this.getPRO = str => {\n      let r = this.props.cum.find(i => i.symbol.toLowerCase() === str.toLowerCase());\n\n      if (r) {\n        return r;\n      }\n    };\n\n    this.getJET = str => {\n      let r = this.props.cum.find(i => i.symbol.toLowerCase() === str.toLowerCase());\n\n      if (r) {\n        return r;\n      }\n    };\n\n    this.getRate = str => {\n      let a = [this.getBTC(\"btcusd\"), this.getAAPL(\"AAPL\"), this.getMSFT(\"MSFT\"), this.getFB(\"FB\"), this.getLTC(\"LTCUSD\"), this.getETH(\"ETHUSD\"), this.getJET(\"Jet Fuel\"), this.getEUR(\"EURUSD\"), this.getJPY(\"USDJPY\"), this.getGBP(\"USDGBP\"), this.getTSLA(\"TSLA\"), this.getPRO(\"Propane\"), this.getGAS(\"GAS\"), this.getDE(\"DIESEL\"), this.getHO(\"Heating Oil\"), this.getCO(\"Crude Oil\"), this.getGOOGL(\"GOOGL\")];\n\n      if (a.length > 0) {\n        let r = a.find(i => {\n          if (i) {\n            return i.symbol.toLowerCase().trim() === str.toLowerCase().trim();\n          }\n        });\n\n        if (r) {\n          if (r.price === undefined) {\n            return r.rate;\n          } else {\n            return r.price;\n          }\n        }\n      }\n    };\n\n    this.closeOrder = (id, amount, newAmount) => () => {\n      this.setState({\n        totalUp: 0\n      });\n      let b = 0;\n      localStorage.setItem(\"total\", b);\n\n      (async () => {\n        let response = await fetch(`https://bridgegatebackend.herokuapp.com/api/trade/close/${id}/${amount}/${newAmount}`);\n        let value = id;\n        let arr = this.state.orders;\n        arr = arr.filter(i => i._id === id);\n        this.setState({\n          orders: arr,\n          totalUp: 0\n        });\n        let a = {\n          orders: arr\n        };\n        let b = 0;\n        localStorage.setItem(\"total\", b);\n        localStorage.setItem(\"orders\", JSON.stringify(a));\n      })();\n    };\n\n    this.closeTimer = item => () => {\n      if (item.active) {\n        console.log(\"still trading\", item);\n\n        if (item.tag === \"buy\") {\n          if (parseInt(item.unit) / parseInt(this.getRate(item.stockName)) > parseInt(item.stockAmount)) {\n            console.log(\"still trading\", item, parseInt(item.unit) / parseInt(this.getRate(item.stockName)) > parseInt(item.stockAmount));\n          } else {\n            console.log(\"stop trading\", item, parseInt(item.unit) / parseInt(this.getRate(item.stockName)) > parseInt(item.stockAmount));\n            this.closeOrder(item._id, (parseInt(item.unit) / parseInt(this.getRate(item.stockName)) - parseInt(item.stockAmount)) * 10 * parseInt(this.getRate(item.stockName)), parseInt(item.unit) / parseInt(this.getRate(item.stockName)) * 10 * parseInt(this.getRate(item.stockName)))();\n          }\n        } else {\n          if (parseInt(item.unit) / parseInt(this.getRate(item.stockName)) > parseInt(item.stockAmount)) {\n            console.log(\"stop trading\", item, parseInt(item.unit) / parseInt(this.getRate(item.stockName)) > parseInt(item.stockAmount));\n            this.closeOrder(item._id, (parseInt(item.unit) / parseInt(this.getRate(item.stockName)) - parseInt(item.stockAmount)) * 10 * parseInt(this.getRate(item.stockName)), parseInt(item.unit) / parseInt(this.getRate(item.stockName)) * 10 * parseInt(this.getRate(item.stockName)))();\n          } else {\n            console.log(\"still trading\", item, parseInt(item.unit) / parseInt(this.getRate(item.stockName)) > parseInt(item.stockAmount));\n          }\n        }\n      }\n    };\n\n    this.props = {\n      real: [],\n      default: [],\n      arr: [\"hi\"],\n      intervalId: null,\n      count: 10\n    };\n  }\n\n  componentDidMount() {\n    const intervalId = setInterval(this.closeTimer, 1000000000000000000000000000);\n    this.setState({\n      intervalId\n    });\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.intervalId);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"order\",\n        style: {\n          height: \"15vh\",\n          overflow: \"auto\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dtls\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text\",\n            children: \"Open positions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text\",\n            children: \"Pending orders\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"expand untoggled\",\n            width: 20,\n            height: 20,\n            viewBox: \"0 0 24 24\",\n            fill: \"none\",\n            xmlns: \"http://www.w3.org/2000/svg\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M5 15.5L12 8.5L19 15.5\",\n              stroke: \"#fff\",\n              strokeWidth: \"1.5\",\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"all-tables\",\n            style: {\n              display: \"block\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tables\",\n              id: \"open-positions\",\n              style: {\n                display: \"block\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"DATE\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 348,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"ID\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 349,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"INSTRUMENT\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 350,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"UNITS\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 351,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"INVESTMENT\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 352,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"DIRECTION\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 353,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"OPEN RATE\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 354,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"MARKET RATE\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 355,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"P&L\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 356,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"PROFIT/LOSS\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 357,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"STATUS\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 358,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 347,\n                    columnNumber: 21\n                  }, this), this.props.orders.length > 0 ? this.props.orders.map((item, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [item.active ? this.closeTimer(item)() : \"\", /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: [item.time ? item.time.slice(0, 10) : \"\", \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 364,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: [\"00\", i + 1]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 370,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: item.stockName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 371,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: item.unit ? (parseInt(item.unit) / this.getRate(item.stockName) * 10).toString().slice(0, 8) : 1\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 373,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: item.unit ? (\"$\" + item.unit / this.getRate(item.stockName) * this.getRate(item.stockName)).toString().slice(0, 8) : 1\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 385,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"rise\",\n                      style: item.tag === \"buy\" ? {\n                        color: \"green\"\n                      } : {\n                        color: \"red\"\n                      },\n                      children: item.tag\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 397,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: item.buyW ? \"$\" + item.buyW.toString().slice(0, 8) : \"\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 407,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: [item.active ? \"$\" : \"\", item.active ? this.getRate(item.stockName) ? this.getRate(item.stockName).toString().slice(0, 8) : \"\" : \"---\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 412,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"fall\",\n                      children: item.active ? item.tag === \"buy\" ? item.unit / this.getRate(item.stockName) > item.stockAmount ? (\"-\" + (item.unit / this.getRate(item.stockName) - item.stockAmount) * 10 * this.getRate(item.stockName)).toString().slice(0, 8) : (\"+\" + (item.stockAmount - item.unit / this.getRate(item.stockName)) * 10 * this.getRate(item.stockName)).toString().slice(0, 8) : //sell\n                      item.unit / this.getRate(item.stockName) < item.stockAmount ? ((item.unit / this.getRate(item.stockName) - item.stockAmount) * 10 * this.getRate(item.stockName)).toString().slice(0, 8) : (\"+\" + (item.unit / this.getRate(item.stockName) - item.stockAmount) * 10 * this.getRate(item.stockName)).toString().slice(0, 8) : \"---\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 422,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: [\" \", item.profit, \"/\", item.loss]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 471,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      style: {\n                        display: \"flex\",\n                        width: \"75%\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"orderBtn\",\n                        className: \"btn-green\",\n                        children: item.active ? \"Open\" : \"closed\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 476,\n                        columnNumber: 31\n                      }, this), item.active ? /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"orderBtn\",\n                        onClick: this.props.closeOrder(item._id, (parseInt(item.unit) / parseInt(this.getRate(item.stockName)) - parseInt(item.stockAmount)) * 10 * parseInt(this.getRate(item.stockName)), parseInt(item.unit) / parseInt(this.getRate(item.stockName)) * 10 * parseInt(this.getRate(item.stockName))),\n                        className: \"btn-red\",\n                        children: \"CLOSE\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 484,\n                        columnNumber: 33\n                      }, this) : \"\", /*#__PURE__*/_jsxDEV(\"i\", {\n                        class: \"fas fa-trash trashS\",\n                        onClick: this.props.delOrder(item._id),\n                        children: \" \"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 506,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 475,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 362,\n                    columnNumber: 27\n                  }, this)) : \"\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 346,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tables\",\n              id: \"pending-orders\",\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"DATE\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 523,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"ID\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 524,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"INSTRUMENT\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 525,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"UNITS\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 526,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"INVESTMENT\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 527,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"DIRECTION\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 528,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"OPEN RATE\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 529,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"MARKET RATE\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 530,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"P&L\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 531,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"PROFIT/LOSS\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 532,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"STATUS\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 533,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 522,\n                    columnNumber: 21\n                  }, this), this.props.orders.length > 0 ? this.props.orders.map((item, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [item.active ? this.closeTimer(item)() : \"\", /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: [item.time ? item.time.slice(0, 10) : \"\", \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 540,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: [\"00\", i + 1]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 546,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: item.stockName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 547,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: item.unit ? (parseInt(item.unit) / this.getRate(item.stockName) * 10).toString().slice(0, 8) : 1\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 549,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: item.unit ? (\"$\" + item.unit / this.getRate(item.stockName) * this.getRate(item.stockName)).toString().slice(0, 8) : 1\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 561,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"rise\",\n                      style: item.tag === \"buy\" ? {\n                        color: \"green\"\n                      } : {\n                        color: \"red\"\n                      },\n                      children: item.tag\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 573,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: item.buyW ? \"$\" + item.buyW.toString().slice(0, 8) : \"\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 583,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: [item.active ? \"$\" : \"\", item.active ? this.getRate(item.stockName) ? this.getRate(item.stockName).toString().slice(0, 8) : \"\" : \"---\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 588,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"fall\",\n                      children: item.active ? item.tag === \"buy\" ? item.unit / this.getRate(item.stockName) > item.stockAmount ? (\"-\" + (item.unit / this.getRate(item.stockName) - item.stockAmount) * 10 * this.getRate(item.stockName)).toString().slice(0, 8) : (\"+\" + (item.stockAmount - item.unit / this.getRate(item.stockName)) * 10 * this.getRate(item.stockName)).toString().slice(0, 8) : //sell\n                      item.unit / this.getRate(item.stockName) < item.stockAmount ? ((item.unit / this.getRate(item.stockName) - item.stockAmount) * 10 * this.getRate(item.stockName)).toString().slice(0, 8) : (\"+\" + (item.unit / this.getRate(item.stockName) - item.stockAmount) * 10 * this.getRate(item.stockName)).toString().slice(0, 8) : \"---\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 598,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: [\" \", item.profit, \"/\", item.loss]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 647,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      style: {\n                        display: \"flex\",\n                        width: \"75%\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"orderBtn\",\n                        className: \"btn-green\",\n                        children: item.active ? \"Open\" : \"closed\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 652,\n                        columnNumber: 31\n                      }, this), item.active ? /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"orderBtn\",\n                        onClick: this.props.closeOrder(item._id, (parseInt(item.unit) / parseInt(this.getRate(item.stockName)) - parseInt(item.stockAmount)) * 10 * parseInt(this.getRate(item.stockName)), parseInt(item.unit) / parseInt(this.getRate(item.stockName)) * 10 * parseInt(this.getRate(item.stockName))),\n                        className: \"btn-red\",\n                        children: \"CLOSE\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 660,\n                        columnNumber: 33\n                      }, this) : \"\", /*#__PURE__*/_jsxDEV(\"i\", {\n                        class: \"fas fa-trash trashS\",\n                        onClick: this.props.delOrder(item._id),\n                        children: \" \"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 682,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 651,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 537,\n                    columnNumber: 27\n                  }, this)) : \"\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 521,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 520,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 519,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default Orders;","map":{"version":3,"sources":["/home/codabae/Documents/Projects/tradeweb/src/Component/Orders.js"],"names":["React","useState","useEffect","Component","Route","Switch","useHistory","Redirect","NavLink","TradingViewWidget","Themes","Orders","constructor","props","savedOrders","JSON","parse","localStorage","getItem","getBTC","str","r","crypto","find","i","symbol","toLowerCase","getETH","getLTC","getEUR","fxPrice","getGBP","getJPY","getAAPL","iex","getTSLA","getGOOGL","getMSFT","getFB","getDE","cum","getHO","getCO","getGAS","getPRO","getJET","getRate","a","length","trim","price","undefined","rate","closeOrder","id","amount","newAmount","setState","totalUp","b","setItem","response","fetch","value","arr","state","orders","filter","_id","stringify","closeTimer","item","active","console","log","tag","parseInt","unit","stockName","stockAmount","real","default","intervalId","count","componentDidMount","setInterval","componentWillUnmount","clearInterval","render","height","overflow","display","map","time","slice","toString","color","buyW","profit","loss","width","delOrder"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Component } from \"react\";\nimport \"../AccountsAsset/dash.css\";\nimport { Route, Switch, useHistory, Redirect, NavLink } from \"react-router-dom\";\n\nimport TradingViewWidget, { Themes } from \"react-tradingview-widget\";\n\nclass Orders extends Component {\n  constructor(props) {\n    super(props);\n    this.props = {\n      real: [],\n      default: [],\n      arr: [\"hi\"],\n      intervalId: null,\n      count: 10,\n    };\n  }\n\n  savedOrders = JSON.parse(localStorage.getItem(\"orders\"))\n    ? JSON.parse(localStorage.getItem(\"orders\"))\n    : [];\n\n  getBTC = (str) => {\n    let r = this.props.crypto.find(\n      (i) => i.symbol.toLowerCase() === str.toLowerCase()\n    );\n    if (r) {\n      return r;\n    }\n  };\n\n  getETH = (str) => {\n    let r = this.props.crypto.find(\n      (i) => i.symbol.toLowerCase() === str.toLowerCase()\n    );\n    if (r) {\n      return r;\n    }\n  };\n\n  getLTC = (str) => {\n    let r = this.props.crypto.find(\n      (i) => i.symbol.toLowerCase() === str.toLowerCase()\n    );\n    if (r) {\n      return r;\n    }\n  };\n\n  getEUR = (str) => {\n    let r = this.props.fxPrice.find(\n      (i) => i.symbol.toLowerCase() === str.toLowerCase()\n    );\n    if (r) {\n      return r;\n    }\n  };\n  getGBP = (str) => {\n    let r = this.props.fxPrice.find(\n      (i) => i.symbol.toLowerCase() === str.toLowerCase()\n    );\n    if (r) {\n      return r;\n    }\n  };\n  getJPY = (str) => {\n    let r = this.props.fxPrice.find(\n      (i) => i.symbol.toLowerCase() === str.toLowerCase()\n    );\n    if (r) {\n      return r;\n    }\n  };\n\n  getAAPL = (str) => {\n    let r = this.props.iex.find(\n      (i) => i.symbol.toLowerCase() === str.toLowerCase()\n    );\n    if (r) {\n      return r;\n    }\n  };\n\n  getTSLA = (str) => {\n    let r = this.props.iex.find(\n      (i) => i.symbol.toLowerCase() === str.toLowerCase()\n    );\n    if (r) {\n      return r;\n    }\n  };\n\n  getGOOGL = (str) => {\n    let r = this.props.iex.find(\n      (i) => i.symbol.toLowerCase() === str.toLowerCase()\n    );\n    if (r) {\n      return r;\n    }\n  };\n\n  getMSFT = (str) => {\n    let r = this.props.iex.find(\n      (i) => i.symbol.toLowerCase() === str.toLowerCase()\n    );\n    if (r) {\n      return r;\n    }\n  };\n\n  getFB = (str) => {\n    let r = this.props.iex.find(\n      (i) => i.symbol.toLowerCase() === str.toLowerCase()\n    );\n    if (r) {\n      return r;\n    }\n  };\n\n  getDE = (str) => {\n    let r = this.props.cum.find(\n      (i) => i.symbol.toLowerCase() === str.toLowerCase()\n    );\n    if (r) {\n      return r;\n    }\n  };\n\n  getHO = (str) => {\n    let r = this.props.cum.find(\n      (i) => i.symbol.toLowerCase() === str.toLowerCase()\n    );\n    if (r) {\n      return r;\n    }\n  };\n\n  getCO = (str) => {\n    let r = this.props.cum.find(\n      (i) => i.symbol.toLowerCase() === str.toLowerCase()\n    );\n    if (r) {\n      return r;\n    }\n  };\n\n  getGAS = (str) => {\n    let r = this.props.cum.find(\n      (i) => i.symbol.toLowerCase() === str.toLowerCase()\n    );\n    if (r) {\n      return r;\n    }\n  };\n\n  getPRO = (str) => {\n    let r = this.props.cum.find(\n      (i) => i.symbol.toLowerCase() === str.toLowerCase()\n    );\n    if (r) {\n      return r;\n    }\n  };\n\n  getJET = (str) => {\n    let r = this.props.cum.find(\n      (i) => i.symbol.toLowerCase() === str.toLowerCase()\n    );\n    if (r) {\n      return r;\n    }\n  };\n  getRate = (str) => {\n    let a = [\n      this.getBTC(\"btcusd\"),\n      this.getAAPL(\"AAPL\"),\n      this.getMSFT(\"MSFT\"),\n      this.getFB(\"FB\"),\n      this.getLTC(\"LTCUSD\"),\n      this.getETH(\"ETHUSD\"),\n      this.getJET(\"Jet Fuel\"),\n      this.getEUR(\"EURUSD\"),\n      this.getJPY(\"USDJPY\"),\n      this.getGBP(\"USDGBP\"),\n      this.getTSLA(\"TSLA\"),\n      this.getPRO(\"Propane\"),\n      this.getGAS(\"GAS\"),\n      this.getDE(\"DIESEL\"),\n      this.getHO(\"Heating Oil\"),\n      this.getCO(\"Crude Oil\"),\n      this.getGOOGL(\"GOOGL\"),\n    ];\n    if (a.length > 0) {\n      let r = a.find((i) => {\n        if (i) {\n          return i.symbol.toLowerCase().trim() === str.toLowerCase().trim();\n        }\n      });\n      if (r) {\n        if (r.price === undefined) {\n          return r.rate;\n        } else {\n          return r.price;\n        }\n      }\n    }\n  };\n\n  closeOrder = (id, amount, newAmount) => () => {\n    this.setState({\n      totalUp: 0,\n    });\n\n    let b = 0;\n    localStorage.setItem(\"total\", b);\n    (async () => {\n      let response = await fetch(\n        `https://bridgegatebackend.herokuapp.com/api/trade/close/${id}/${amount}/${newAmount}`\n      );\n      let value = id;\n\n      let arr = this.state.orders;\n\n      arr = arr.filter((i) => i._id === id);\n\n      this.setState({\n        orders: arr,\n        totalUp: 0,\n      });\n\n      let a = { orders: arr };\n      let b = 0;\n      localStorage.setItem(\"total\", b);\n\n      localStorage.setItem(\"orders\", JSON.stringify(a));\n    })();\n  };\n\n  componentDidMount() {\n    const intervalId = setInterval(this.closeTimer, 1000000000000000000000000000);\n    this.setState({ intervalId });\n  }\n  closeTimer = (item) => () => {\n\n    if (item.active) {\n      console.log(\"still trading\", item);\n      if (item.tag === \"buy\") {\n        if (\n          parseInt(item.unit) / parseInt(this.getRate(item.stockName)) >\n          parseInt(item.stockAmount)\n        ) {\n          console.log(\n            \"still trading\",\n            item,\n            parseInt(item.unit) / parseInt(this.getRate(item.stockName)) >\n              parseInt(item.stockAmount)\n          );\n        } else {\n          console.log(\n            \"stop trading\",\n            item,\n            parseInt(item.unit) / parseInt(this.getRate(item.stockName)) >\n              parseInt(item.stockAmount)\n          );\n\n          this.closeOrder(\n            item._id,\n            (parseInt(item.unit) / parseInt(this.getRate(item.stockName)) -\n              parseInt(item.stockAmount)) *\n              10 *\n              parseInt(this.getRate(item.stockName)),\n            (parseInt(item.unit) / parseInt(this.getRate(item.stockName))) *\n              10 *\n              parseInt(this.getRate(item.stockName))\n          )();\n        }\n      } else {\n        if (\n          parseInt(item.unit) / parseInt(this.getRate(item.stockName)) >\n          parseInt(item.stockAmount)\n        ) {\n          console.log(\n            \"stop trading\",\n            item,\n            parseInt(item.unit) / parseInt(this.getRate(item.stockName)) >\n              parseInt(item.stockAmount)\n          );\n\n          this.closeOrder(\n            item._id,\n            (parseInt(item.unit) / parseInt(this.getRate(item.stockName)) -\n              parseInt(item.stockAmount)) *\n              10 *\n              parseInt(this.getRate(item.stockName)),\n            (parseInt(item.unit) / parseInt(this.getRate(item.stockName))) *\n              10 *\n              parseInt(this.getRate(item.stockName))\n          )();\n        } else {\n          console.log(\n            \"still trading\",\n            item,\n            parseInt(item.unit) / parseInt(this.getRate(item.stockName)) >\n              parseInt(item.stockAmount)\n          );\n        }\n      }\n    }\n    \n\n  };\n  componentWillUnmount() {\n    clearInterval(this.state.intervalId);\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"order\" style={{ height: \"15vh\", overflow: \"auto\" }}>\n          <div className=\"dtls\">\n            <span className=\"text\">Open positions</span>\n            <span className=\"text\">Pending orders</span>\n            <svg\n              className=\"expand untoggled\"\n              width={20}\n              height={20}\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                d=\"M5 15.5L12 8.5L19 15.5\"\n                stroke=\"#fff\"\n                strokeWidth=\"1.5\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              />\n            </svg>\n            <div className=\"all-tables\" style={{ display: \"block\" }}>\n              <div\n                className=\"tables\"\n                id=\"open-positions\"\n                style={{ display: \"block\" }}\n              >\n                <table>\n                  <tbody>\n                    <tr>\n                      <th>DATE</th>\n                      <th>ID</th>\n                      <th>INSTRUMENT</th>\n                      <th>UNITS</th>\n                      <th>INVESTMENT</th>\n                      <th>DIRECTION</th>\n                      <th>OPEN RATE</th>\n                      <th>MARKET RATE</th>\n                      <th>P&L</th>\n                      <th>PROFIT/LOSS</th>\n                      <th>STATUS</th>\n                    </tr>\n                    {this.props.orders.length > 0\n                      ? this.props.orders.map((item, i) => (\n                          <tr>\n                            {item.active ? this.closeTimer(item)() : \"\"}\n                            <td>\n                              {item.time ? item.time.slice(0, 10) : \"\"}{\" \"}\n                              {/* {item.time\n                                      ? item.time.slice(16).slice(0, 8)\n                                      : \"\"} */}\n                            </td>\n                            <td>00{i + 1}</td>\n                            <td>{item.stockName}</td>\n\n                            <td>\n                              {item.unit\n                                ? (\n                                    (parseInt(item.unit) /\n                                      this.getRate(item.stockName)) *\n                                    10\n                                  )\n                                    .toString()\n                                    .slice(0, 8)\n                                : 1}\n                            </td>\n\n                            <td>\n                              {item.unit\n                                ? (\n                                    \"$\" +\n                                    (item.unit / this.getRate(item.stockName)) *\n                                      this.getRate(item.stockName)\n                                  )\n                                    .toString()\n                                    .slice(0, 8)\n                                : 1}\n                            </td>\n\n                            <td\n                              className=\"rise\"\n                              style={\n                                item.tag === \"buy\"\n                                  ? { color: \"green\" }\n                                  : { color: \"red\" }\n                              }\n                            >\n                              {item.tag}\n                            </td>\n                            <td>\n                              {item.buyW\n                                ? \"$\" + item.buyW.toString().slice(0, 8)\n                                : \"\"}\n                            </td>\n                            <td>\n                              {item.active ? \"$\" : \"\"}\n                              {item.active\n                                ? this.getRate(item.stockName)\n                                  ? this.getRate(item.stockName)\n                                      .toString()\n                                      .slice(0, 8)\n                                  : \"\"\n                                : \"---\"}\n                            </td>\n                            <td className=\"fall\">\n                              {item.active\n                                ? item.tag === \"buy\"\n                                  ? item.unit / this.getRate(item.stockName) >\n                                    item.stockAmount\n                                    ? (\n                                        \"-\" +\n                                        (item.unit /\n                                          this.getRate(item.stockName) -\n                                          item.stockAmount) *\n                                          10 *\n                                          this.getRate(item.stockName)\n                                      )\n                                        .toString()\n                                        .slice(0, 8)\n                                    : (\n                                        \"+\" +\n                                        (item.stockAmount -\n                                          item.unit /\n                                            this.getRate(item.stockName)) *\n                                          10 *\n                                          this.getRate(item.stockName)\n                                      )\n                                        .toString()\n                                        .slice(0, 8)\n                                  : //sell\n                                  item.unit / this.getRate(item.stockName) <\n                                    item.stockAmount\n                                  ? (\n                                      (item.unit /\n                                        this.getRate(item.stockName) -\n                                        item.stockAmount) *\n                                      10 *\n                                      this.getRate(item.stockName)\n                                    )\n                                      .toString()\n                                      .slice(0, 8)\n                                  : (\n                                      \"+\" +\n                                      (item.unit /\n                                        this.getRate(item.stockName) -\n                                        item.stockAmount) *\n                                        10 *\n                                        this.getRate(item.stockName)\n                                    )\n                                      .toString()\n                                      .slice(0, 8)\n                                : \"---\"}\n                            </td>\n                            <td>\n                              {\" \"}\n                              {item.profit}/{item.loss}\n                            </td>\n                            <td style={{ display: \"flex\", width: \"75%\" }}>\n                              <button\n                                className=\"orderBtn\"\n                                className=\"btn-green\"\n                              >\n                                {item.active ? \"Open\" : \"closed\"}\n                              </button>\n\n                              {item.active ? (\n                                <button\n                                  className=\"orderBtn\"\n                                  onClick={this.props.closeOrder(\n                                    item._id,\n                                    (parseInt(item.unit) /\n                                      parseInt(this.getRate(item.stockName)) -\n                                      parseInt(item.stockAmount)) *\n                                      10 *\n                                      parseInt(this.getRate(item.stockName)),\n                                    (parseInt(item.unit) /\n                                      parseInt(this.getRate(item.stockName))) *\n                                      10 *\n                                      parseInt(this.getRate(item.stockName))\n                                  )}\n                                  className=\"btn-red\"\n                                >\n                                  CLOSE\n                                </button>\n                              ) : (\n                                \"\"\n                              )}\n\n                              <i\n                                class=\"fas fa-trash trashS\"\n                                onClick={this.props.delOrder(item._id)}\n                              >\n                                {\" \"}\n                              </i>\n                            </td>\n                          </tr>\n                        ))\n                      : \"\"}\n                  </tbody>\n                </table>\n              </div>\n              <div className=\"tables\" id=\"pending-orders\">\n                <table>\n                  <tbody>\n                    <tr>\n                      <th>DATE</th>\n                      <th>ID</th>\n                      <th>INSTRUMENT</th>\n                      <th>UNITS</th>\n                      <th>INVESTMENT</th>\n                      <th>DIRECTION</th>\n                      <th>OPEN RATE</th>\n                      <th>MARKET RATE</th>\n                      <th>P&L</th>\n                      <th>PROFIT/LOSS</th>\n                      <th>STATUS</th>\n                    </tr>\n                    {this.props.orders.length > 0\n                      ? this.props.orders.map((item, i) => (\n                          <tr>\n                            {item.active ? this.closeTimer(item)() : \"\"}\n\n                            <td>\n                              {item.time ? item.time.slice(0, 10) : \"\"}{\" \"}\n                              {/* {item.time\n                                     ? item.time.slice(16).slice(0, 8)\n                                     : \"\"} */}\n                            </td>\n                            <td>00{i + 1}</td>\n                            <td>{item.stockName}</td>\n\n                            <td>\n                              {item.unit\n                                ? (\n                                    (parseInt(item.unit) /\n                                      this.getRate(item.stockName)) *\n                                    10\n                                  )\n                                    .toString()\n                                    .slice(0, 8)\n                                : 1}\n                            </td>\n\n                            <td>\n                              {item.unit\n                                ? (\n                                    \"$\" +\n                                    (item.unit / this.getRate(item.stockName)) *\n                                      this.getRate(item.stockName)\n                                  )\n                                    .toString()\n                                    .slice(0, 8)\n                                : 1}\n                            </td>\n\n                            <td\n                              className=\"rise\"\n                              style={\n                                item.tag === \"buy\"\n                                  ? { color: \"green\" }\n                                  : { color: \"red\" }\n                              }\n                            >\n                              {item.tag}\n                            </td>\n                            <td>\n                              {item.buyW\n                                ? \"$\" + item.buyW.toString().slice(0, 8)\n                                : \"\"}\n                            </td>\n                            <td>\n                              {item.active ? \"$\" : \"\"}\n                              {item.active\n                                ? this.getRate(item.stockName)\n                                  ? this.getRate(item.stockName)\n                                      .toString()\n                                      .slice(0, 8)\n                                  : \"\"\n                                : \"---\"}\n                            </td>\n                            <td className=\"fall\">\n                              {item.active\n                                ? item.tag === \"buy\"\n                                  ? item.unit / this.getRate(item.stockName) >\n                                    item.stockAmount\n                                    ? (\n                                        \"-\" +\n                                        (item.unit /\n                                          this.getRate(item.stockName) -\n                                          item.stockAmount) *\n                                          10 *\n                                          this.getRate(item.stockName)\n                                      )\n                                        .toString()\n                                        .slice(0, 8)\n                                    : (\n                                        \"+\" +\n                                        (item.stockAmount -\n                                          item.unit /\n                                            this.getRate(item.stockName)) *\n                                          10 *\n                                          this.getRate(item.stockName)\n                                      )\n                                        .toString()\n                                        .slice(0, 8)\n                                  : //sell\n                                  item.unit / this.getRate(item.stockName) <\n                                    item.stockAmount\n                                  ? (\n                                      (item.unit /\n                                        this.getRate(item.stockName) -\n                                        item.stockAmount) *\n                                      10 *\n                                      this.getRate(item.stockName)\n                                    )\n                                      .toString()\n                                      .slice(0, 8)\n                                  : (\n                                      \"+\" +\n                                      (item.unit /\n                                        this.getRate(item.stockName) -\n                                        item.stockAmount) *\n                                        10 *\n                                        this.getRate(item.stockName)\n                                    )\n                                      .toString()\n                                      .slice(0, 8)\n                                : \"---\"}\n                            </td>\n                            <td>\n                              {\" \"}\n                              {item.profit}/{item.loss}\n                            </td>\n                            <td style={{ display: \"flex\", width: \"75%\" }}>\n                              <button\n                                className=\"orderBtn\"\n                                className=\"btn-green\"\n                              >\n                                {item.active ? \"Open\" : \"closed\"}\n                              </button>\n\n                              {item.active ? (\n                                <button\n                                  className=\"orderBtn\"\n                                  onClick={this.props.closeOrder(\n                                    item._id,\n                                    (parseInt(item.unit) /\n                                      parseInt(this.getRate(item.stockName)) -\n                                      parseInt(item.stockAmount)) *\n                                      10 *\n                                      parseInt(this.getRate(item.stockName)),\n                                    (parseInt(item.unit) /\n                                      parseInt(this.getRate(item.stockName))) *\n                                      10 *\n                                      parseInt(this.getRate(item.stockName))\n                                  )}\n                                  className=\"btn-red\"\n                                >\n                                  CLOSE\n                                </button>\n                              ) : (\n                                \"\"\n                              )}\n\n                              <i\n                                class=\"fas fa-trash trashS\"\n                                onClick={this.props.delOrder(item._id)}\n                              >\n                                {\" \"}\n                              </i>\n                            </td>\n                          </tr>\n                        ))\n                      : \"\"}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Orders;\n"]},"metadata":{},"sourceType":"module"}